{{- if eq .Values.refit.persistance.enabled true }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: {{ .Release.Name }}-notebook
spec:
 storageClassName: {{ .Values.refit.persistance.storageClass }}
 accessModes:
  - ReadWriteOnce
 resources:
  requests:
   storage: 100Gi
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-notebook
  labels:
    meta.helm.sh/release-name: "{{ .Release.Name }}"
    meta.helm.sh/release-namespace: "{{ .Release.Namespace }}"
  annotations:
    meta.helm.sh/release-name: "{{ .Release.Name }}"
    meta.helm.sh/release-namespace: "{{ .Release.Namespace }}"
spec:
  replicas: {{ .Values.refit.notebook.replicas }}
  serviceName: {{ .Release.Name }}-notebook
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: notebook
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: notebook
      # annotations:
        # rollme: {{ randAlphaNum 5 | quote }}
    spec:
      containers:
        - name: {{ .Release.Name }}-notebook
          image: cdliotprototype/cdl-refit-notebook:{{ .Values.refit.version }}
          env:
            - name: POSTGRES_HOST
              value: {{ .Release.Name }}-postgresql
            - name: POSTGRES_USERNAME
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: refit-postgresql-credentials
            - name: POSTGRES_SCHEMA
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: FLINK_HOST
              value: {{ .Release.Name }}-flink-jobmanager
            - name: WAIT_FLINK_HOST
              value: {{ .Release.Name }}-flink-jobmanager
            - name: JUPYTER_ENABLE_LAB 
              value: "yes"
            - name: REFIT_PROJECT
              value: notebook
            - name: INGESTION_HOST
              value: {{ .Release.Name }}-ingestion
            - name: INTEGRATIONS_HOST
              value: {{ .Release.Name }}-integrations
            - name: MINIO_HOST
              value: {{ .Release.Name }}-minio:9000
            - name: MINIO_BUCKET_IMPORT
              value: refit-import
            - name: MINIO_BUCKET_MODELS
              value: refit-models
            - name: MINIO_BUCKET_SCHEMA
              value: refit-schema
            - name: MINIO_BUCKET_JOBS
              value: refit-jobs
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: accesskey
                  name: {{ .Release.Name }}-minio
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: secretkey
                  name: {{ .Release.Name }}-minio
            {{- if eq .Values.refit.schemaConfigMap "__demo__" }}
            - name: REFIT_DEMO
              value: "true"
            {{- end }}
          resources:
            limits:
              memory: {{ .Values.refit.notebook.resources.limits.memory }}
            requests:
              memory: {{ .Values.refit.notebook.resources.requests.memory }}
          ports:
            - containerPort: 8888
              name: api
          {{- if eq .Values.refit.persistance.enabled true }}
          volumeMounts:
            - name: {{ .Release.Name }}-notebook
              mountPath: /home/jovyan/work/
          {{- end }}
      {{- with .Values.refit.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.refit.persistance.enabled true }}
      volumes:
      - name: {{ .Release.Name }}-notebook
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-notebook
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-notebook
  labels:
    meta.helm.sh/release-name: "{{ .Release.Name }}"
    meta.helm.sh/release-namespace: "{{ .Release.Namespace }}"
  annotations:
    meta.helm.sh/release-name: "{{ .Release.Name }}"
    meta.helm.sh/release-namespace: "{{ .Release.Namespace }}"
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 8888
  selector:
    app: {{ .Release.Name }}
    component: notebook