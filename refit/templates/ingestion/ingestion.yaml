apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ingestion
  labels:
    meta.helm.sh/release-name: "{{ .Release.Name }}"
    meta.helm.sh/release-namespace: "{{ .Release.Namespace }}"
  annotations:
    meta.helm.sh/release-name: "{{ .Release.Name }}"
    meta.helm.sh/release-namespace: "{{ .Release.Namespace }}"
spec:
  replicas: {{ .Values.refit.ingestion.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: ingestion
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: ingestion
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      containers:
        - name: {{ .Release.Name }}-ingestion
          image: cdliotprototype/cdl-refit-ingestion:{{ .Values.refit.version }}
          env:
            - name: PROJECT
              value: ingestion
            - name: WAIT_CASSANDRA_HOST
              value: {{ .Release.Name }}-cassandra
            - name: CASSANDRA_HOST
              value: {{ .Release.Name }}-cassandra
            - name: CASSANDRA_PORT
              value: "9042"
            - name: CASSANDRA_KEYSPACE
              value: cdl_refit
            - name: CASSANDRA_USER
              value: cassandra
            - name: CASSANDRA_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: cassandra-password
                  name: refit-cassandra-credentials
            - name: KAFKA_HOST
              value: refit-kafka:9092
            - name: KAFKA_DATA_TOPIC
              value: refit.inference.data
            - name: KAFKA_MODELS_TOPIC 
              value: refit.training.models
            - name: KAFKA_PREDICTIONS_TOPIC 
              value: refit.inference.predictions
            - name: KAFKA_IMPORT_TOPIC 
              value: refit.training.import
            - name: KAFKA_RAW_SENSOR_DATA_TOPIC 
              value: refit.inference.raw.data
            - name: KAFKA_SENSOR_DATA_TOPIC 
              value: refit.inference.sensor.data
            - name: KAFKA_MODEL_PUBLISHED_TOPIC 
              value: refit.training.models
            - name: MINIO_HOST
              value: http://{{ .Release.Name }}-minio:9000
            - name: MINIO_BUCKET_IMPORT
              value: refit-import
            - name: MINIO_BUCKET_MODELS
              value: refit-models
            - name: MINIO_BUCKET_SCHEMA
              value: refit-schema
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: accesskey
                  name: {{ .Release.Name }}-minio
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: secretkey
                  name: {{ .Release.Name }}-minio
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Release.Name }}-encryption-key
            {{- if eq .Values.refit.schemaConfigMap "__demo__" }}
            - name: REFIT_DEMO
              value: "false"
            {{- end }}
            - name: REFIT_RELEASE_PREFIX
              value: {{ .Release.Name }}
          resources:
            limits:
              memory: {{ .Values.refit.ingestion.resources.limits.memory }}
            requests:
              memory: {{ .Values.refit.ingestion.resources.requests.memory }}
          ports:
            - containerPort: 3030
              name: api
      {{- with .Values.refit.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-ingestion
  labels:
    meta.helm.sh/release-name: "{{ .Release.Name }}"
    meta.helm.sh/release-namespace: "{{ .Release.Namespace }}"
  annotations:
    meta.helm.sh/release-name: "{{ .Release.Name }}"
    meta.helm.sh/release-namespace: "{{ .Release.Namespace }}"
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 3030
  selector:
    app: {{ .Release.Name }}
    component: ingestion